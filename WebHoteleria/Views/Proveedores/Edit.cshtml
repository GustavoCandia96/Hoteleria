@model WebHoteleria.Models.ProveedorModel

<script type="text/javascript">

    $(document).ready(function () {

        //SEGUN LOS SELECCIONADO LLAMA A LA VISTA PARCIAL CORRESPONDIENTE Y CARGA
        //EN EL DIV ASIGNADO. SE CREO DOS METODOS EN EL CONTROLADOR PARA RECIBIR LAS PETICIONES
        $("#IdTipoDocumento").change(function () {
            var tipoDocumentoId = $("#IdTipoDocumento").val();
            if (tipoDocumentoId == "1") {
                $.get('/Proveedores/PartialProveedorFisico/', function (data) {
                    $('#partialRegionProveedor').html(data);
                    $('#partialRegionProveedor').fadeIn('fast');
                });
            } else {
                $.get('/Proveedores/PartialProveedorJuridico/', function (data) {
                    $('#partialRegionProveedor').html(data);
                    $('#partialRegionProveedor').fadeIn('fast');
                });
            }
        });

        $("#IdPais").change(function () {
            $("#IdDepartamento").val("");
            $("#IdCiudad").val("");
            $("#IdBarrio").val("");
            var valorIdPais = $("#IdPais").val();
            $.ajax({
                url: '/Departamentos/ObtenerListadoDepartamentos',
                type: 'POST',
                data: {
                    paisId: valorIdPais
                }
            }).done(function (response) {
                $("[name = IdDepartamento]").html(response);
                $("[name = IdDepartamento]").prepend("<option value='' selected='selected'>--Seleccionar--</option>");
            });
        });

        $("#IdDepartamento").change(function () {
            $("#IdCiudad").val("");
            $("#IdBarrio").val("");
            var valorIdDepartamento = $("#IdDepartamento").val();
            $.ajax({
                url: '/Ciudades/ObtenerListadoCiudades',
                type: 'POST',
                data: {
                    departamentoId: valorIdDepartamento
                }
            }).done(function (response) {
                $("[name = IdCiudad]").html(response);
                $("[name = IdCiudad]").prepend("<option value='' selected='selected'>--Seleccionar--</option>");
            });
        });

        $("#IdCiudad").change(function () {
            $("#IdBarrio").val("");
            var valorIdCiudad = $("#IdCiudad").val();
            $.ajax({
                url: '/Barrios/ObtenerListaBarrios',
                type: 'POST',
                data: {
                    ciudadId: valorIdCiudad
                }
            }).done(function (response) {
                $("[name = IdBarrio]").html(response);
                $("[name = IdBarrio]").prepend("<option value='' selected='selected'>--Seleccionar--</option>");
            });
        });

        $("#btnAgregarContacto").click(function () {

            var idTipoContacto = $("#IdTipoContacto").val();
            var nombreTipoContacto = $("#IdTipoContacto option:selected").text();
            var contacto = $("#txtContacto").val();

            if (idTipoContacto == "") {
                alertaSoloMensaje("Tiene que seleccionar el tipo de contacto");
                return false;
            }
            if (contacto == "") {
                alertaSoloMensaje("Ingrese el valor de contacto");
                return false;
            }

            var tr;
            tr = $('<tr/>');
            tr.append("<td>0</td>");
            tr.append("<td>" + nombreTipoContacto + "</td>");
            tr.append("<td>" + contacto + "</td>");

            var actualizar = "<button type=\'button\' class=\'btn btn-warning btn-xs editLink\'><i class=\'glyphicon glyphicon-pencil\'></i></button>";
            var eliminar = "<button type=\'button\' class=\'btn btn-danger btn-xs deleteLink\'><i class=\'glyphicon glyphicon-remove\'></i></button>";
            tr.append("<td>" + actualizar + eliminar + "</td>");

            tr.append("<td><input type='hidden' name='arrId'  value='0'/></td>");
            tr.append("<td><input type='hidden' name='arrIdTipoContacto'  value='" + idTipoContacto + "'/></td>");
            tr.append("<td><input type='hidden' name='arrContacto'  value='" + contacto + "'/></td>");

            $('#tblDetalle').append(tr);
            LimpiarDatos();

        });

        $("#tblDetalle").on('click', '.deleteLink', function () {
            var tr = $(this).closest('tr');
            tr.css("background-color", "#FF3700");
            tr.fadeOut(400, function () {
                tr.remove();
            });
            return false;
        });

        $("#tblDetalle").on('click', '.editLink', function () {
            var tr = $(this).closest('tr');
            var idTipoContacto = tr.find("td:eq(0)").html();
            var contacto = tr.find("td:eq(2)").html();

            $("#IdTipoContacto").val(idTipoContacto);
            $("#txtContacto").val(contacto);

            tr.css("background-color", "#FF3700");
            tr.fadeOut(400, function () {
                tr.remove();
            });
            return false;
        });

    });

    function alertaSoloMensaje(mensaje) {
        bootbox.alert({
            title: "<strong>Alerta</strong>",
            message: mensaje,
            size: 'medium'
        });
    }

    function LimpiarDatos() {
        $("#IdTipoContacto").val('');
        $("#txtContacto").val('');
    }

</script>

<div class="page-title">
    <div class="title_left">
        <h3>Crear nuevo proveedor <small></small></h3>
    </div>
</div>

@using (Html.BeginForm("Edit", "Proveedores", FormMethod.Post, new { id = "frmEditarProveedor" }))
{
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">

            <div class="x_panel">
                <div class="x_title">
                    <ul class="nav navbar-right panel_toolbox">
                        <li>
                            <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                        </li>
                    </ul>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">

                    @if (@ViewBag.msg != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade in">
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">×</span>
                            </button>
                            @Html.ValidationMessage("Duplicado")
                            @Html.ValidationMessage("Error")
                        </div>
                    }

                    @Html.HiddenFor(model => model.Id)

                    <div class="form-horizontal">

                        <div class="form-group">
                            @Html.Label("* Actividad Economica", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.IdActividadEconomica, null, "--Seleccionar--", new { @class = "form-control has-feedback-left", required = "required" })
                                <span class="fa fa-unsorted form-control-feedback left" aria-hidden="true"></span>
                                @Html.ValidationMessageFor(m => m.IdActividadEconomica)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("* Tipo Documento", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.IdTipoDocumento, null, "--Seleccionar--", new { @class = "form-control has-feedback-left", required = "required" })
                                <span class="fa fa-unsorted form-control-feedback left" aria-hidden="true"></span>
                                @Html.ValidationMessageFor(m => m.IdTipoDocumento)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("* N° Documento", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.NroDocumento, null, new { @class = "form-control has-feedback-left", required = "required" })
                                <span class="fa fa-book form-control-feedback left" aria-hidden="true"></span>
                                @Html.ValidationMessageFor(m => m.NroDocumento)
                            </div>
                        </div>


                        <div id="partialRegionProveedor">
                            @if (Model.IdTipoDocumento != null)
                            {
                                switch (Model.IdTipoDocumento)
                                {
                                    case 1:
                                        @Html.Partial("~/Views/Proveedores/PartialProveedorFisico.cshtml", Model)
                                        break;
                                    default:
                                        @Html.Partial("~/Views/Proveedores/PartialProveedorJuridico.cshtml", Model)
                                        break;
                                }
                            }
                        </div>

                        <div class="form-group">
                            @Html.Label("N° Teléfono Principal", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.NroTelefonoPrincipal, null, new { @class = "form-control has-feedback-left" })
                                <span class="fa fa-phone form-control-feedback left" aria-hidden="true"></span>
                                @Html.ValidationMessageFor(m => m.NroTelefonoPrincipal)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("E-mail Principal", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.EmailPrincipal, null, new { @class = "form-control has-feedback-left" })
                                <span class="fa fa-envelope form-control-feedback left" aria-hidden="true"></span>
                                @Html.ValidationMessageFor(m => m.EmailPrincipal)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("País", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.IdPais, null, "--Seleccionar--", new { @class = "form-control has-feedback-left" })
                                <span class="fa fa-unsorted form-control-feedback left" aria-hidden="true"></span>
                                @Html.ValidationMessageFor(m => m.IdPais)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Departamento", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.IdDepartamento, null, "--Seleccionar--", new { @class = "form-control has-feedback-left" })
                                <span class="fa fa-unsorted form-control-feedback left" aria-hidden="true"></span>
                                @Html.ValidationMessageFor(m => m.IdDepartamento)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Ciudad", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.IdCiudad, null, "--Seleccionar--", new { @class = "form-control has-feedback-left" })
                                <span class="fa fa-unsorted form-control-feedback left" aria-hidden="true"></span>
                                @Html.ValidationMessageFor(m => m.IdCiudad)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Barrio / Localidad", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.IdBarrio, null, "--Seleccionar--", new { @class = "form-control has-feedback-left" })
                                <span class="fa fa-unsorted form-control-feedback left" aria-hidden="true"></span>
                                @Html.ValidationMessageFor(m => m.IdBarrio)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Dirección", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.Direccion, null, new { @class = "form-control has-feedback-left" })
                                <span class="fa fa-map-marker form-control-feedback left" aria-hidden="true"></span>
                                @Html.ValidationMessageFor(m => m.Direccion)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("* Estado", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                 @Html.DropDownListFor(model => model.EstadoDescrip, null, new { @class = "form-control has-feedback-left" })
                                 <span class="fa fa-unsorted form-control-feedback left" aria-hidden="true"></span>
                                 @Html.ValidationMessageFor(m => m.EstadoDescrip)
                            </div>
                        </div>

                    </div>

                </div>
            </div>

            <div class="x_panel">
                <div class="x_title">
                    <h2>Listado de contactos <small>Agregue los medios de contacto del proveedor</small></h2>
                    <ul class="nav navbar-right panel_toolbox">
                        <li>
                            <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                        </li>
                    </ul>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content" style="display: block;">

                    <div class="form-horizontal">

                        <div class="form-group">
                            @Html.Label("Tipo Contacto", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.IdTipoContacto, null, "--Seleccionar--", new { @class = "form-control has-feedback-left" })
                                <span class="fa fa-unsorted form-control-feedback left" aria-hidden="true"></span>
                                @Html.ValidationMessageFor(m => m.IdTipoContacto)
                            </div>
                            <div class="col-md-4">
                                @Html.TextBox("txtContacto", null, new { @class = "form-control has-feedback-left" })
                                <span class="fa fa-tty form-control-feedback left" aria-hidden="true"></span>
                            </div>
                            <div class="col-md-2">
                                <input type="button" name="btnAgregarContacto" id="btnAgregarContacto" value="Agregar Contacto" class="btn btn-warning " />
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                            </div>
                            <div class="col-md-8">
                                <div class="x_panel">

                                    <div class="x_content">
                                        <div class="table-responsive">
                                            <table class="table" id="tblDetalle">
                                                <thead>
                                                    <tr>
                                                        <th>Id</th>
                                                        <th>Tipo Contacto</th>
                                                        <th>Contacto</th>
                                                        <th colspan="2">Acciones</th>
                                                    </tr>
                                                </thead>
                                                <tbody>

                                                    @if (ViewBag.ListaProveedorContacto != null)
                                                    {
                                                        foreach (WebHoteleria.Models.ProveedorContactoModel datos in ((List<WebHoteleria.Models.ProveedorContactoModel>)ViewBag.ListaProveedorContacto).ToList())
                                                        {
                                                            <tr>
                                                                <td>@datos.IdTipoContacto</td>
                                                                <td>@datos.NombreTipoContacto</td>
                                                                <td>@datos.Contacto</td>
                                                                <td>
                                                                    <button type='button' class='btn btn-warning btn-xs editLink'><i class='glyphicon glyphicon-pencil'></i></button>
                                                                    <button type='button' class='btn btn-danger btn-xs deleteLink'><i class='glyphicon glyphicon-remove'></i></button>
                                                                </td>
                                                                <td><input type='hidden' name='arrId' value='@datos.Id' /></td>
                                                                <td><input type='hidden' name='arrIdTipoContacto' value='@datos.IdTipoContacto' /></td>
                                                                <td><input type='hidden' name='arrContacto' value='@datos.Contacto' /></td>
                                                            </tr>
                                                        }
                                                    }

                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>

                </div>
            </div>

            <div class="form-group">
                <div class="form-group">
                    <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">

                        @Html.ActionLink("Volver", "Index", null, new { @class = "btn btn-primary" })
                        <input type="submit" value="Guardar" id="btnGuardar" class="btn btn-success" />
                    </div>
                </div>
            </div>

        </div>
    </div>
}
